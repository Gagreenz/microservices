version: '3'

services:
  rabbitmq:
    image: rabbitmq:3.12.0-beta.6-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
  
  api:
    build: 
      context: ./
      dockerfile: ./apps/api/Dockerfile
    env_file:
      - .env
    ports:
      - '3000:3000'
    depends_on:
      - rabbitmq
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev api

  auth:
    build: 
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres_users
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev auth

  profile:
    build: 
      context: ./
      dockerfile: ./apps/profile/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres_profile
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev profile

  postgres_users:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${USER_POSTGRES_DB}
    expose:
      - '5433'
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql_user/data
    command: -p 5432
    
  postgres_profile:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${PROFILE_POSTGRES_DB}
    expose:
      - '5433'
    ports:
      - '5433:5433'
    volumes:
      - ./db/data:/var/lib/postgresql_profile/data
    command: -p 5433

  postgres_admin:
    image: dpage/pgadmin4
    depends_on:
      - postgres_users
      - postgres_profile
    env_file:
      - .env
    ports:
      - '15432:80'